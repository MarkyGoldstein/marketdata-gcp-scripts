# Define a named volume called 'ws' that will persist the /workspace directory
# across all build steps.
volumes:
- name: 'ws'
  path: '/workspace'

steps:
# Step 1: Initialize the git submodule.
# Mount the shared volume 'ws' to this step's /workspace.
- name: 'gcr.io/cloud-builders/git'
  volumes:
  - name: 'ws'
    path: '/workspace'
  args: ['submodule', 'update', '--init', '--recursive']

# Step 2: Build the image from the now-populated submodule source.
# Mount the same shared volume 'ws' to this step's /workspace.
- name: 'gcr.io/cloud-builders/docker'
  volumes:
  - name: 'ws'
    path: '/workspace'
  args:
    - 'build'
    - '-t'
    - 'europe-west6-docker.pkg.dev/crm-incoming-data-and-enrich/cloud-run-source-deploy/gcr-cleaner:latest'
    - '--file'
    - 'gcr-cleaner/Dockerfile'
    - 'gcr-cleaner/'

# Explicitly declare the image that this build produces.
images:
- 'europe-west6-docker.pkg.dev/crm-incoming-data-and-enrich/cloud-run-source-deploy/gcr-cleaner:latest'

# This 'options' block is required when using a custom service account.
options:
  logging: 'CLOUD_LOGGING_ONLY'